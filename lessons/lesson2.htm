<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Занятие 2</title>
    <meta name="viewport" content="width=device-width">
    <link rel="stylesheet" href="../styles/style.css">
  </head>
  <body>
    <header>
      <h1>Занятие 2</h1>
    </header>
    <main>
    <h1>Физическое и логическое выделение текста</h1>
    <a href="../index.htm">назад</a>
    
    <section>
      <h2>Ключевые цели</h2>
      <ul class="targets">
        <li>Дети понимают иерархическую модель DOM</li>
        <li>Дети выстраивают правильную структуру тегов, правильно используют вложенность</li>
        <li>Дети знают и используют строчные теги</li>
        <li>Каждый выполнил ряд заданий на использование тегов</li>
        <li>Дети понимают, что такое атрибуты тегов</li>
        <li>Каждый применил атрибуты к тегу &lt;hr></li>
      </ul>
    </section>
    <section>
      <h2>Начало занятия</h2>
      <p class="dir">
        Итак, детки, сегодня мы с вами узнаем что такое объектная модель DOM, изучим 16 новых тегов, а также познакомимся с понятием атрибута тега.
        Но прежде всего, давайте проверим, как вы запомнили то, что было на прошлом занятии. 
        Открывайте еду апп и проходите тест! А я пока выборочно проверю домашние задания :)        
      </p>
      <p class="rec">13 минут от урока закладываем на тестирование. Проводится с целямми:
      <br>1) Сразу настроить детей на работу;
      <br>2) Выставить оценки;
      <br>3) По результатам понять серьёзность настроя группы, сложность предстоящих сегодня заданий.</p>
      <h2>Модель DOM</h2>
      <div class="clearfix">
        <img src="..\imgs\lesson2\DOM Model.jpg" id="img_dom">
        <p class="rec">Показываем детям картинку, рассказываем про иерархическую вложенность, подобную вложенности папок в
        операционной системе. Главная цель - дать понять, что нельзя делать так: <br>&lt;p>&lt;b>&lt;/p>&lt;/b></p>
      </div>
      <p class="info">
        DOM (Document Object Model) – объектная модель, представляющая документ в виде дерева объектов.
        Каждый HTML-тег образует узел дерева. Вложенные в него теги становятся дочерними узлами.
      </p>
      <p class="rec"></p>
      
      <h2>Физическое и логическое выделение</h2>
      
      <div class="clearfix">
        <img src="..\imgs\lesson2\Tags types.jpg" id="img_tags-types">
        <p class="rec">Обсудив с детьми модель DOM , плавно выводим детей на то, что создание этого "дерева"
          происходит с помощью тегов. И тут мы мы обявляем, что теги делятся не только на парные и не парные.
          Оказывается, Теги делятся также на блочные/строчные. А последние в свою очередь на физические и логические.
        И сегодня одна из важных целей - освоить работу с этими тегами.</p>
      </div>
      <p class="info">Теги физического форматирования текста: <dfn>способны физически воздействовать на текст (делать его жирным,
        курсивом, маленьким, большим и т.д.). В различных браузерах результат действия этих тегов будет одинаков.
      </dfn></p>
      <p class="info">Теги логического форматирования текста: <dfn>используются в первую очередь поисковыми системами и другими программами,
        работающими с данным документом. Изменяют внешне текст, однако каждый браузер делает это по своему усмотрению. При выделении того или иного слова тегами логического форматирования как бы
        устанавливается флажок для поисковых систем: это – цитата, это – важная информация и т.д.</dfn>
      </p>
      <p class="dir">
        Визуальных отличий при применении этих тегов нет, но для поисковых систем рекомендуется использовать &lt;strong&gt; и &lt;em&gt;. По мнению большинства seo-оптимизаторов теги физического и логического выделения имеют приблизительно одинаковый вес (возможно что em и strong имеют немного больший вес в поисковой системе Яндекс).
      </p>
      <p class="rec">
        Крайне важно сказать детям, что хотя мы пока не изучали блочные теги, но мы уже пользуемся ими. Блочными являются
        теги &lt;p>, &lt;h1>...&lt;h6>. И...
      </p>
      <p class="info">...Блочные теги категорически неправильно располагать внутри строчных. В дереве DOM строчный объект всегда является дочерним по отношению к блочному!</p>
      <h2>Физическое форматирование</h2>
      
      <p class="info desc">Для визуального (физического) выделения текста применяются следующие теги:</p>
      <p class="info">&lt;blockquote> &lt;/blockquote><dfn> - оформляет текст как цитату – фактически возникает блок с отступами слева и справа. Границами текст не выделяется.</dfn></p>
      <p class="info">&lt;small> &lt;/small><dfn> - этот тег уменьшает размер текста на 1 условную единицу по отношению к исходному. Важно напомнить, что теги можно вкладывать один в другой и уменьшать тем самым размер не на 1, а на две и более единиц.</dfn></p>
      <p class="info">&lt;big> &lt;/big><dfn> - противоположность &lt;SMALL>.  </dfn></p>
      <p class="rec">Следующие теги похожи на те, которые ребята проходили на форматах данных при изучении разметки RTF-текста. Можно предложить им самим называть свойства, за которые отвечает тот или иной тег.</p>
      <p class="info">&lt;i> &lt;/i><dfn> - курсивное начертание</dfn></p>
      <p class="info">&lt;b> &lt;/b><dfn> - полужирное начертание</dfn></p>
      <p class="info">&lt;u> &lt;/u><dfn> - подчеркивание</dfn></p>
      <p class="info">&lt;s> &lt;/s><dfn> - зачеркивание</dfn></p>
      <p class="info">&lt;sup> &lt;/sup><dfn> - верхний индекс</dfn></p>
      <p class="info">&lt;sub>…&lt;/sub><dfn>  - нижний индекс</dfn></p>
      <h2>Логическое выделение</h2>
      <p class="info">&lt;cite>…&lt;/cite><dfn> - для выделения цитат и сносок на другие материалы, отображается курсивом.</dfn></p>
      <p class="info">&lt;q>…&lt;/q><dfn> - для выделения цитат, автоматически берется в кавычки.</dfn></p>
      <p class="info">&lt;em>…&lt;em><dfn>- для выделения особенно важного фрагмента в тексте, отображается курсивом.</dfn></p>
      <p class="info">&lt;strong>…&lt;/strong><dfn> - для выделения особенно важного фрагмента в тексте (важнее, чем &lt;EM>), отображается полужирным начертанием.</dfn></p>
      <p class="info">&lt;dfn>…&lt;/dfn><dfn> - для выделения определений, терминов, встречающихся в тексте первый раз (после слова с тегом &lt;DFN> дается определение слова), отображается курсивом.</dfn></p>
      <p class="info">&lt;code>…&lt;/code><dfn> - для выделения текста, являющегося кодом, отображается уменьшенным размером и моноширинным шрифтом. (Дополнительные пробелы и переносы строк игнорируются, как и в &lt;P>, необходимо использовать внутри тега &lt;CODE> теги &lt;P> и &lt;BR>).</dfn></p>
      <p class="info">Элемент &lt;pre><dfn> определяет блок предварительно форматированного текста. Такой текст отображается обычно моноширинным шрифтом и со всеми пробелами между словами. По умолчанию, любое количество пробелов идущих в коде подряд, на веб-странице показывается как один. Тег &lt;pre> позволяет обойти эту особенность и отображать текст как требуется разработчику.</dfn></p>
      <h2>Тег HR, Атрибуты</h2>      
      <p class="info desc">        
        У тегов есть настраиваемые свойства, называемые атрибутами. У каждого тега свой набор атрибутов, при этом 
        запись выглядит следующим образом: 
      <p class="info"><тег атрибут1= “значение” атрибут2= “значение”>…&lt;/тег></p>
      <p class="info desc">        
        Порядок следования атрибутов не важен, а разделяются они лишь пробелом. У некоторых атрибутов нет значений. 
        Значения приянто записывать в двойных или одинарных кавычках.
      </p>
      <p class="rec">Как обычно, общие слова - хорошо, а примеры - еще лучше. Говорим деткам, что практически у всех тегов есть какие-нибудь атрибуты, 
      но мы будем работать с атрибутами на примере конкретного тега: горизонтальной линии. Мотивируем это тем, что это отличная возможность на примере
      такой простой штуки как линия, увидеть как много могут изменить атрибуты.</p>
      <p class="info">
        Тег &lt;HR>  - горизонтальная линия
      </p>
      <p class="rec">Все возможные значения атрибута в данных методических материалах разделяются между собой прямой линией; при   
        программировании запись атрибута будет выглядеть следующим образом: &lt;HR align=”center”> для выравнивания по центру.</p>
      <p class="info">
        Атрибуты линии
      </p>      
      <p class="info">
        &lt;HR align=”center | left | right”>  <dfn>- выравнивание линии на экране: по центру, по левому краю или по правому краю</dfn> 
      </p>
      <p class="info">
        &lt;HR color=#000000>  <dfn>-  цвет линии</dfn>
      </p>
      <p class="info">
        &lt;HR size=”2”>  <dfn>- толщина линии в пикселах</dfn>
      </p>
      <p class="info">
        &lt;HR width=”100%”> <dfn> - ширина линии. указывается как в пикселах, 
        так и в процентах от ширины того элемента, в который вложена линия.</dfn>
      </p>
      <h2>Задания</h2>
      <p class="dir">
        Создать одностраничный сайт с использованием артибутов и линии
      </p>
      
      
      <h2>Задание</h2>
      <p class="rec">Есть два задания: буфер, чтобы те, кто быстро разобрался с Планкером не бездельничали, и основное задание</p>
      <h2>Последние 8 минут: Возможности Plunker'а и дз </h2>
      <p class="rec">Показываем кнопочку / элемент интерфейся, рассказываем что это, демонстрируем эффект, объясняем, чем это полезно нам</p>
      <p class="info">
        Список кнопочек и элементов интерфейса:
        <dfn>
        <br>1) Code Linting - поиск ошибок
        <br>2) Делаем ошибку в разметке - показываем на предупреждение слева от нумерации строк
        <br>3) Показываем фуллскрин предпросмотр
        <br>4) Показываем галочку "Beautify your code"
        <br>5) Показываем название планка
        <br>6) Показываем сейв и список планков
        <br>7) Показываем список версий, возможность откатываться назад
        <br>8) Предлагаем детям сохранить свои проекты, чтобы продолжить их потом
      </dfn></p>
    </section>
    </main>
    <footer>
    </footer>
  </body>
</html>