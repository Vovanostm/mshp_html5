<!DOCTYPE html>
<html>
 <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>Занятие 4</title>
  <meta name="viewport" content="width=device-width">
  <link rel="stylesheet" href="../styles/style.css">
 </head>
 <body>
  <header>
   <H1>Занятие 4</H1>
  </header>
  <main>
  <H1>Подключение CSS</H1>
  <a href="../index.htm">назад</a>
  <section>
   <h2>Ключевые цели</h2>
   <ul class="targets">
    <li>Дети понимают, что такое Каскадные таблицы стилей</li>
    <li>Осознание селекторов</li>
    <li>Дети понимают, как подключить стили к html-файлу</li>
    <li>Дети выстраивают правильную структуру тегов, правильно используют вложенность</li>
    <li>Дети понимают семантику тегов HTML5</li>
    <li>Дети структурируют документ по семантике HTML5 без использования div</li>
    <li>Каждый ребенок смог выполнить классную работу и разобраться с вложенностью тегов.</li>
   </ul>
  </section>
  <h2>Настройка на работу</h2>
  <p class = "dir">
   Изначально на HTML возлагалась лишь задача структурной разметки текста без указаний, как должен выглядеть на экране тот или иной элемент. То есть была возможность описать смысл той или иной части текста: это – заголовок, это – обыкновенный абзац, а там – цитата. Впоследствии язык наполнялся тегами, описывающими внешний вид элементов, однако код от этого только пострадал – html документ превратился в кашу, и чтобы посмотреть на структуру страницы, иногда нужно было прослеживать взглядом несколько строк оформляющих тегов. Да и разметка как таковая стала пропадать, ведь вместо прописывания тега заголовка &lt;H1> можно просто описать &lt;FONT> с необходимыми атрибутами.
   Легко представить себе какой-то медиа-портал, содержащий миллионы страниц. Желание изменить дизайн тоже вполне повседневно. А если совместить эти два факта, то в результате получится апокалипсис: просмотреть миллион страниц и везде исправить в заголовочном &lt;FONT> color со значения «#98ff50» на «#980050» просто физически невозможно. 
   Отказываться от красивого оформления страниц никому не хотелось, а проблемы, встающие перед верстальщиками, необходимо было решать. Начиная с 1994 года, описанием стандартов HTML стала заниматься международная организация W3C (от англ. World Wide Web Consortium – Сообщество Всемирной Паутины). Уже в 1995 году Консорциум ввёл в HTML 3.0 поддержку иерархических стилевых спецификаций CSS (от англ. Cascading Style Sheets – каскадные таблицы стилей).
   Важно отметить, что внедрение каких-либо правил способствует тому, что однажды все сайты будут одинаково и корректно отображаться во всех браузерах.
  </p>
  <p class="dir">
   CSS (Cascading Style Sheets — каскадные таблицы стилей) – одна из базовых технологий в современном Интернете. CSS-код – это список инструкций для браузера, – как и где отображать элементы веб-страницы, написанный особым образом. Под «элементами» обычно подразумеваются теги XHTML/HTML и их содержимое. При этом работа с CSS впечатляет: изменив всего одну строку в css-стилях, дизайнер сайта может радикально изменить оформление многих тысяч страниц сайта, сделав все заголовки, скажем, зелёными, переместив блок новостей в угол или изменив фон страниц.
  </p>
  
  <p class="rec">13 минут от урока закладываем на тестирование. Проводится с целями:
   <br>1) Сразу настроить детей на работу;
   <br>2) Выставить оценки;
   <br>3) По результатам понять серьёзность настроя группы, сложность предстоящих сегодня заданий.
  </p>
  <h2>Теоретическая часть.</h2>
  <h3>Что такое CSS</h3>
  <p class="info">CSS позволяет добавить макет и дизайн для наших страниц и обмениваться стилями от элемента к элементу и страницы к странице. Прежде чем мы сможем раскрыть все особенности CSS, есть несколько аспектов языка, которые вы должны в полной мере понимать.
  Первое что важно знать, как именно отображаются стили. В частности, мы должны знать, как работают разные типы селекторов и как порядок этих селекторов может повлиять на отображение стилей. Мы также хотим понимать несколько основных значений свойств, которые постоянно появляются в CSS, в частности те, которые касаются цвета и размера.</p>
  <p class="info">
   Все инструкции, описываемые CSS, называются определениями. Каждое отдельное определение содержит в себе информацию: для какого элемента (набора элементов) описывается правило отображения, а также набор правил. Элемент, для которого определение написано, называется селектором, а набор правил – телом определения. Запись же выглядит следующим образом: записывается селектор, затем открывающая фигурная скобка.  После идут правила, разделенные между собой точкой с запятой. Правила в свою очередь – имя свойства и через двоеточие указанное значение этого свойства. Закрывает тело закрывающая фигурная скобка:

  </p>
  <h3>Общий вид селектора</h3>
  <p class="info">
    Р {color: red; font-size: 200%;}      - в фигурных скобках, разделены точкой с запятой.
  Р – селектор, color – свойство, red – значение, color: red – правило.
  </p>
   <p class="rec">
   Важно отметить необходимость заканчивать каждое правило точкой с запятой. Это необходимо потому, что вполне вероятно, что разработчику понадобится добавить еще несколько правил. Забыв поставить точку с запятой, он обречен на то, что его код не будет работать. Также, важно понимать, что при описании правила для селектора H1, к примеру, все теги &lt;H1> в документе HTML будут изменены в соответствии с описанными правилами.
  </p>
  <h3>Виды селекторов</h3>
  <ul>
   <li>Селектор по тегу (по типу)</li>
   <li>Селектор по классу <q>.class</q></li>
   <li>Селектор по уникальному идентификатору <q>id</q></li>
  </ul>
  <p class="dir">
   Селекторы чрезвычайно мощная штука и описанные выше относятся к наиболее распространённым селекторам, которые нам попадаются. Эти селекторы только начало.
  </p>
  <h3>Комментарии</h3>
  <p class="dir">
   Комментирование в CSS играет бОльшую роль, чем комментирование в HTML. Разработчики, как правило, прописывают несколько вариантов оформления, затем комментируют один вариант, смотрят результат. Потом комментируют другой вариант и смотрят, что получилось. Так выбирается стиль, который больше подходит страницам сайта. Комментарий записывается так: <em>/*Комментарий*/</em>
  </p>
  <h3>Подключение CSS</h3>
  <p class="dir">
  Существует <strong>три</strong> вида подключения CSS к HTML:
  </p>
  <ul>
   <li>Встроенное(Inline) подключение</li>
   <li>Внутреннее подключение</li>
   <li>Внешнее подключение</li>
  </ul>
  <h3>Внешнее подключение</h3>
  <p class="info">
   Чаще всего используют внешнее подключение, когда все стили для страницы (очень часто и для всего сайта) помещаются в один файл и подключаются с помощью специального тега - ссылки &lt;link> в заголовочной части страницы (&lt;head>): &lt;link rel=”stylesheet” type=”text/css” href=”адрес к файлу”>
  </p>
  <p class="rec">
   Например, у на есть два файла - index.htm и style.css. Для того, чтобы на html - странице были применены стили из style.css, в тег &lt;head> у index.html надо добавить <link rel=”stylesheet” type=”text/css” href=”style.css”>
  </p>
  <h3>Внутреннее подключение</h3>
  <p class="info">
   Обычно, 
  </p>
  <h2>Задачи</h2>
  <p>Практика, практика, практика!</p>
  <h3>Создай модель</h3>
  <h3>Новая работа!</h3>
  <h3>Как здорово, когда всё понятно!</h3>
  <p>
   Составьте небольшой раздел из двух статей об электромобилях - один раздел о истории, второй - о современниках. Мы - любим новые технологии.
   Информацию можно поискать на сайте <a href="http://www.popmech.ru/vehicles/13652-vpered-v-proshloe/">Популярной механики</a> и журнала <a href="http://ichip.ru/tag/ehlektromobil">Chip</a>
  </p>
  <h3>Коротко о рыбе</h3>
  <p>
   Используя генератор случайных статей из классической литературы, например, <a href="http://fish.bumagi.net/">fish.bumagi.net</a>, создать <q>Сборник сочинений</q>. Каждое сочинение должно быть озаглавлено, а также иметь в подвале автора.
  </p>
  <h3>Немного секретов</h3>
 </section>
 </main>
 <footer>
 </footer>
</body>
</html>