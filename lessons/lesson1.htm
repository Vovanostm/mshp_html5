<!DOCTYPE html>
<html>
 <head>
  <!-- <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> -->
  <!-- это одно и то же -->
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>Занятие 1</title>
  <link rel="stylesheet" href="../styles/style.css">
  <link rel="stylesheet" href="../styles/tasktabs.css">
  <meta name="viewport" content="width=device-width">

<link rel=stylesheet href="../scripts/codemirror/lib/codemirror.css">
<script src="../scripts/codemirror/lib/codemirror.js"></script>
<script src="../scripts/codemirror/mode/xml/xml.js"></script>
<script src="../scripts/codemirror/mode/javascript/javascript.js"></script>
<script src="../scripts/codemirror/mode/css/css.js"></script>
<script src="../scripts/codemirror/mode/htmlmixed/htmlmixed.js"></script>
<script src="../scripts/codemirror/addon/edit/matchbrackets.js"></script>
<script src="../scripts/codemirror/doc/activebookmark.js"></script>
</head>

 <body>
  <header>
    <h1>Занятие 1</h1>
  </header>

  <main>  
  <h1>Знакомство с html. Базовые теги.</h1>
  <a href="../index.htm">назад</a>  
  <section>
   <h2>Ключевые цели</h2>
   <ul class="targets">
    <li>Дети понимают, что за курс им предстоит пройти, к какой конечной точке они придут пройдя весь трек и пройдя конкретный данный семестровый курс</li>
    <li>Преподаватель описал в общих чертах тематическое наполнение и "что мы сможем сделать". Возможно - показал работы предыдущих групп.</li>
    <li>Дети осознают что такое html файл, что такое язык html, какую роль они играют в работе сайта</li>
    <li>Даны ключевые определения под запись. Приведены примеры, наглядные демонстрации</li>
    <li>Дети знают базовую файловую структуру сайта</li>
    <li>Что каждая страничка - отдельный файл, что стартовая страничка называется index.htm, что названия страничек должны быть осмысленными</li>
    <li>Дети юзают plnkr.co </li>
    <li>Каждый создал свой аккаунт, каждый знает как открыть планк, каждый смог написать код, закрыть браузер и открыть повторно, каждый знает как посмотреть live-preview и Code-linting</li>
    <li>Дети понимают что такое теги, базовую разметку html документа</li>
    <li>В конце урока проводится небольшое тестирование, процентов 90 должно быть верных ответов</li>
    <li>Дети смогли использовать заголовки h1-h6, поработали с тегом p</li>
    <li>Каждый ребенок смог "импортировать" в html код текст, содержащий заголовки, подзаголовки, раздельные параграфы</li>
   </ul>
  </section>

  <section>


      <h2>Что за курс</h2>
      <p class="dir">Курс Web состоит из двух частей и рассчитан на два семестра. Результатом первого семестра будет умение верстать статичные сайты с любым расположением элментов. И умение применять html5 разметку страницы.
        <br> Во втором семестре мы научимся придавать странице большую интерактивность. Изучим продвинутые инструменты работы с оформлением сайтов, а если все будет хорошо, то даже затронем так называемые препроцессоры, которые сейчас являются очень актуальной
        технологией
        <br> После у вас будет на выбор несколько направлений: JS, PHP, CMS, CEO.
      </p>
      <p class="rec">И рассказываем деткам в трех словах, что делает каждая технология. Объясняем, что прошарив на хорошем уровне это всё - будем вполне конкурентноспособными специалистами в области веб разработки</p>


      <h2>Клиент - Сервер</h2>
      <div class="clearfix">
        <img id="img_client-server" src="..\imgs\lesson1\ClientServer.gif">
        <p class="rec"> Объясняем деткам, что каждый раз, когда мы вбиваем в адресной строке адрес сайта происходит следующее: клиент (то есть компьютер с которого вбили адрес) отправляет запрос серверу и сервер в ответ присылает несколько файлов. Среди них .html и .css
          файл, которые наш браузер получает и интерпретирует, чтобы мы видели не код, содержащийся в этих файлах, а сайт, который этот код описывает.</p>
      </div>
        <p class="info">
          HTML файл <dfn>- это файл, содержащий html-код и описывающий содержимое сайта. Этот файл присылается сервером в ответ на запрос клиента.</dfn>
        </p>


      <h2>История языка html</h2>
      <p class="rec">После плавно переводим ребят к истории html. Не думаю, что нужно это давать под запись. Просто интересная история с целью повысить интерес к предмету.</p>
      <p class="dir">
        HTML был разработан британским учёным Тимом Бернерсом-Ли приблизительно в 1986—1991 годах в Швейцарии. HTML создавался как язык для обмена научной и технической документацией, пригодный для использования людьми, не являющимися специалистами в области
        вёрстки.
      </p>
      <p class="dir">
        Изначально язык HTML был задуман и создан как средство структурирования и форматирования документов без их привязки к средствам воспроизведения (отображения). Однако современное применение HTML очень далеко от его изначальной задачи. Например, тег TABLE
        предназначен для создания в документах таблиц, но часто используется и для оформления размещения элементов на странице.
      </p>
      <p class="dir">
        Вышло несколько версий HTML одна за другой, а потом вышла HTML 4.01 и все остановилось. Остановилось на много лет и даже нашлись те, кто начал прочить технологии угасание. Но допускать такой расклад никто не собирался и решено было начать разработку html5.
      </p>
      <p class="dir">
        Первая пробная версия HTML5 увидела свет в 2008 году. При этом только к 2022 году планирут закончить версию, называемю "Предпологаемой рекомендацией". Критерием завершения будет стопроцентная поддержка новой технологии всеми браузерами.
        <br> Сейчас разработкой html5 занимается 3 организации:
        <br> 1) Web Hypertext Application Techonology Group - группа основанная по инициативе представителей Apple, Mozilla, Google и Opera.
        <br> 2) World Wide Web Consorcium (W3C) - международный консорциум, определяющий текущий стандарт HTML и CSS
        <br> 3) Internet Engeenering Task Forse - Специальная комиссия интернет разработок
      </p>
      <p class="rec">
        Важно, чтобы дети понимали, что мы изучаем html-5, который настолько современный, что даже еще не полностью реализован. Хочется создать ощущение, что мы изучаем актуальные технологии и стремимся к высокому понимаю ими работы с ними. Это так и есть.
      </p>


      <h2>Что такое HTML</h2>
      <p class="dir">Ок, мы поняли в чем смысл html'я и как он развивался. Давайте теперь посмотрим сам язык. Запишите определение.</p>
      <p class="info">
        HTML <dfn>- HyperText Markup Language — «язык гипертекстовой разметки»</dfn>
      </p>
      <p class="dir">
        Термин "программирование на HTML" не верен и оторван от реальности. HTML не описывает алгоритмы, как языки программирования, которые вы изучаете. HTML описывает содержимое сайта.
      </p>
      <p class="rec">
        Можно сказать, что языки программирования отдают команды. К примеру, с помощью языка программирования можно заставить заставить учителя пройтись по классу. А вот html позволил бы описать этот класс и что в нем находится.
      </p>
      <p class="rec">
        После разбираем два сайта:
        <br>1) lingscars.com - сперва прокручиваем, показываем всякие шутки типа курицы и ядерной боеголовки, обсуждаем, что автор, наверно сидел и в угаре тыкал повсюду мигающие стрелочки и подобное. А потом жмем ctrl+U, и показываем, что код сайта на самом
        деле очень аккуратный и автор явно четко понимал, что делает. Таким образом, мы показываем детям, что html - дисциплина, требующая внимательности и усидчивости.
        <br>2) nest.com -> products -> thermostat - прокручиваем, обращаем внимание на аккуратность и современность сайта. Выбираем какую-нибудь кнопку и щелкаем "Просмотреть код элемента". Показываем, что каждая кнопочка, каждая буковка на сайте описана
        на html-коде.
      </p>


      <h2>Инструменты для работы с HTML, Теги</h2>
      <p class="dir">Итак, сегодня мы начнем работу с прекрасным онлайн-сервисом для разработки сайтов: plnkr.co, позже мы перейдем на оффлайн редактор <em>Sublime Text + Emmet (?)</em>.
      </p>
      <p class="dir">У нас сегодня две ключевые цели:
        <br>1) Я хочу, чтобы каждый из вас зарегистрировался и научился пользоваться сервисом plnker.co
        <br>2) Я хочу, чтобы каждый из вас понял базовые принципы html - разметки
        <br>И мы эти цели совместим. Итак, посмотрите пожалуйста на экран.</p>
      <p class="rec">Открывает plnkr.co; показываем, что у нас есть регистрация и поэтому справа видно наш ник; упоминаем, что здесь проекты называются планками; создаем новый планк. Перед детьми появляется код, объясняем им, что это базовая разметка и подобно тому,
        как в программировании первой программой делаем "Hello, world!", здесь создается "Hello, Plunker!"</p>


      <h2>Теги</h2>
      <p class="dir">Друзья, перед вами так называемые теги. В html их много и их надо будет запоминать. Начнем прямо сейчас. Запишем ряд определений. </p>
      <p class="rec">Разумеется, после каждого определения стоит давать краткое разъяснение, чтобы все было понятно и этот кусок занятия не превратился в бездумную диктову. Также стоит объяснить, про существование парных тегов и одиночных. Предложить детям найти парные
        и одиночные теги в данном коде. Можно договориться с ними, что давая определения парных тегов мы будем писать символы &lt;/> </p>
      <p class="info">Тег <dfn>- элемент HTML. Текст между начальным и конечным тегами отображается и размещается на сайте в зависимости от тега и его свойств</dfn></p>
      <p class="info">&lt;!Doctype html> <dfn>- определяет версию html, использующуюся на сайте. Данная надпись соответвует html5</dfn></p>
      <p class="info">&lt;html> &lt;/> <dfn> - хороший тон. Как писать название программы в Паскале. Без этого Тега все равно все будет работать</dfn></p>
      <p class="info">&lt;head> &lt;/> <dfn>- раздел, содержащий теги с информацией для браузера и поисковиков</dfn></p>
      <p class="info">&lt;link> &lt;/> <dfn>- связь с внешними файлами или документами (напр. стили или шрифты</dfn></p>
      <p class="info">&lt;meta> &lt;/> <dfn>- кодировка, информация для поисковика</dfn></p>
      <p class="info">&lt;title> &lt;/> <dfn>- название вкладки</dfn></p>
      <p class="info">&lt;body> &lt;/> <dfn>- раздел для хранения контента страницы, отображаемого в браузере</dfn></p>
      <p class="info">&lt;h1> &lt;/>...&lt;h1> &lt;/> <dfn>- заголовки и подзаголовки от первого до шестого уровня</dfn></p>
      <p class="info">&lt;p> &lt;/> <dfn>- параграф</dfn></p>


      <h2>Регистрация</h2>
      <p class="rec">Говорим, что теперь пора и поработать. Но сперва надо зарегаться на планкере. Но на планкере нельзя зарегаться. Это делается через гитхаб. Упоминаем о значении этого сайта в соверменном мире :)</p>
      <p class="info">
        Регистрация на Планкере
        <dfn>
      <br>1) github.com
      <br>2) Sign Up
      <br>3) Подтверждаем регистрацию у себя на почте
      <br>4) plnkr.co
      <br>5) Sign Up with Github
      <br>6) Authorize
      <br>7) Как только зарегались - приступаем к заданию, прикрепленному в системе
      </dfn></p>
      	

      <h2>Задание</h2>
      <div class="tabs">
        <input id="tab1" type="radio" name="tabs" checked>
        <label for="tab1" title="Вкладка 1">Задание</label>

        <input id="tab2" type="radio" name="tabs">
        <label for="tab2" title="Вкладка 2">Решение (HTML)</label>

        <input id="tab3" type="radio" name="tabs">
        <label for="tab3" title="Вкладка 3">Решение (CSS)</label>

        <input id="tab4" type="radio" name="tabs">
        <label for="tab4" title="Вкладка 4">Результат</label>

        <textarea name="task-1-1" id="content1" cols="100" rows="26" disabled>
Отформатировать нижеследующий текст так, чтобы он коректно отображался в браузере. Использовать теги
<h1>,<h2>,<p> и спецсимволы &amp;lt; и &amp;gt;
----
Строчные элементы 
Строчными называются такие элементы веб-страницы, которые являются непосредственной частью другого элемента, например, текстового абзаца. В основном они используются для изменения вида текста или его логического выделения. 
Тег <b>
Устанавливает жирное начертание шрифта.
Тег <br>
Перенос строки.
Тег <em>
Предназначен для акцентирования текста.
Тег <i>
Устанавливает курсивное начертание шрифта.
Тег <q>
Используется для выделения в тексте цитат.
Тег <s>
Отображает текст как перечеркнутый.
Тег <dfn>
Универсальный строчный элемент.
Тег <strong>
Акцентирует текст, обычно жирным начертанием.
Тег <u>
Добавляет подчеркивание к тексту.
    </textarea>
    <textarea name="task-1-1" id="content2" cols="100" rows="23" disabled>
<h1>Строчные элементы</h1>
<p>Строчными называются такие элементы веб-страницы, которые являются непосредственной частью другого элемента, например, текстового абзаца. В основном они используются для изменения вида текста или его логического выделения.</p>
<h2>Тег &amp;lt;b&amp;gt;</h2>
<p>Устанавливает жирное начертание шрифта.</p>
<h2>Тег &amp;lt;br&amp;gt;</h2>
<p>Перенос строки.</p>
<h2>Тег &amp;lt;em&amp;gt;</h2>
<p>Предназначен для акцентирования текста</p>
<h2>Тег &amp;lt;i&amp;gt;</h2>
<p>Устанавливает курсивное начертание шрифта.</p>
<h2>Тег &amp;lt;q&amp;gt;</h2>
<p>Используется для выделения в тексте цитат.</p>
<h2>Тег &amp;lt;s&amp;gt;</h2>
<p>Отображает текст как перечеркнутый.</p>
<h2>Тег &amp;lt;dfn&amp;gt;</h2>
<p>Универсальный строчный элемент.</p>
<h2>Тег &amp;lt;strong&amp;gt;</h2>
<p>Акцентирует текст, обычно жирным начертанием.</p>
<h2>Тег &amp;lt;u&amp;gt;</h2>
<p>Добавляет подчеркивание к тексту.</p>
        </textarea>
        <textarea name="task-1-1" id="content3" cols="100" rows="23" disabled>
Отсутствует
        </textarea>
        <section id="content4">
          <h1>Строчные элементы</h1>
          <p>Строчными называются такие элементы веб-страницы, которые являются непосредственной частью другого элемента, например, текстового абзаца. В основном они используются для изменения вида текста или его логического выделения.</p>
          <h2>Тег &lt;b&gt;</h2>
          <p>Устанавливает жирное начертание шрифта.</p>
          <h2>Тег &lt;br&gt;</h2>
          <p>Перенос строки.</p>
          <h2>Тег &lt;em&gt;</h2>
          <p>Предназначен для акцентирования текста</p>
          <h2>Тег &lt;i&gt;</h2>
          <p>Устанавливает курсивное начертание шрифта.</p>
          <h2>Тег &lt;q&gt;</h2>
          <p>Используется для выделения в тексте цитат.</p>
          <h2>Тег &lt;s&gt;</h2>
          <p>Отображает текст как перечеркнутый.</p>
          <h2>Тег &lt;dfn&gt;</h2>
          <p>Универсальный строчный элемент.</p>
          <h2>Тег &lt;strong&gt;</h2>
          <p>Акцентирует текст, обычно жирным начертанием.</p>
          <h2>Тег &lt;u&gt;</h2>
          <p>Добавляет подчеркивание к тексту.</p>
        </section>
      </div>


      <h2>Последние 8 минут: Возможности Plunker'а и дз </h2>
      <p class="rec">Показываем кнопочку / элемент интерфейся, рассказываем что это, демонстрируем эффект, объясняем, чем это полезно нам</p>
      <p class="info">
        Список кнопочек и элементов интерфейса:
        <dfn>
        <br>1) Code Linting - поиск ошибок
        <br>2) Делаем ошибку в разметке - показываем на предупреждение слева от нумерации строк
        <br>3) Показываем фуллскрин предпросмотр
        <br>4) Показываем галочку "Beautify your code"
        <br>5) Показываем название планка
        <br>6) Показываем сейв и список планков
        <br>7) Показываем список версий, возможность откатываться назад
        <br>8) Предлагаем детям сохранить свои проекты, чтобы продолжить их потом
      </dfn></p>


     <h2>Это интересно</h2>
     <p class="info desc">
      Рекомендуется загружать все сценарии (javascript) в нижней части страницы, так как это улучшает быстродействие. За исключением немногочисленных ситуаций, в которых необходимо изменять DOM до загрузки всех элементов.
     </p>
     
     <p class="info desc">
      Объявление кодировки
      &lt;meta charset=utf-8"> пришёл на смену
      &lt;meta http-equiv="Content-Type" content="text/htmLj charset=utf-8">
     </p>

     <p class="info desc">
      Еще некоторые элементы исчезают из-за появления более совершенных заменителей:
      <br>&mdash; acronym заменяется на abbr;
      <br>&mdash; applet заменяется на object;
      <br>&mdash; dir заменяется на ul.
      <br>Кроме устаревших элементов, недействительными стали многие атри­ буты. К их числу относятся следующие атрибуты представления:
      <br>&mdash; align;
      <br>&mdash; атрибуты link, vlink, alink и text тега body;
      <br>&mdash; bgcolor;
      <br>&mdash; height и width;
      <br>&mdash; атрибутscrollingэлементаiframe;
      <br>&mdash; valign;
      <br>&mdash; hspace и vspace;
      <br>&mdash; атрибутыcellpadding,cellspacingиborderтегаtable.
      Атрибут profile тега head в дальнейшем поддерживаться не будет. Учтите, что он часто встречается в шаблонах WordPress.
      Наконец, исчез атрибут longdesc элементов &lt;img> и &lt;iframe>. Веро­ ятно, это огорчит разработчиков, которым приходится решать проблемы Доступности, потому что в атрибуте longdesc было принято передавать Дополнительные описания для экранных дикторов.
      Если вы собираетесь использовать HTML5 на существующем сайте, найдите эти элементы и либо удалите их, либо замените семантическими аналогами. Обязательно проверьте валидность своих страниц службой W3C Validator1—она поможет в поиске устаревших тегов и атрибутов.
     </p>
     <p class="info">
      <a href="http://www.w3.org">http://www.w3.org</a> - разработка специффикации html5 и css3
     </p>
    </section>
    </main>

    <footer>
    </footer>

    <script>
    var editor = CodeMirror.fromTextArea(document.getElementById("content2"), {
      lineNumbers: true,
      mode: "text/html",
      matchBrackets: true
    });

    var editor = CodeMirror.fromTextArea(document.getElementById("content3"), {
      lineNumbers: true,
      mode: "text/css",
      matchBrackets: true
    });
  </script>
   </body>
  </html>
